#!/usr/bin/env python3
#================================================================================
#
# File:  extsync
#
# Usage: Move missing files from USB drive to SD card
#
# Notes: This script only works on Linux (intentionally).
#
#================================================================================

from   utils.walker import walk
import                     os
import                     sys
from   utils.errors import *
import                     colr
from   utils.walker import walk
from   funcs        import preEllipse
import                     time
import                     platform

# Linux only...
if platform.system() != 'Linux':
  rint(color('ERROR: Script runs on Linux only' ,fore='red',style='bright'))
#
# Globals...
#

debug       = False
verbose     = False
veryverbose = True

#------------------------------------------------------------------------------
#
# Function: red - Print red error
#

def red(msg):

  print(color("ERROR: "+msg,fore='red',style='bright'))

#------------------------------------------------------------------------------
#
# Function: color - Use colr.color if stdout is a tty
#

def color(*args,**kwargs):

  if not sys.stdout.isatty():
    return args[0]
  return colr.color(*args,**kwargs)

#------------------------------------------------------------------------------
#
# Function: expand - Expand file/path to full path
#

def expand(path):

  return os.path.abspath(os.path.expanduser(path))

#------------------------------------------------------------------------------
#
# Function: copyOneFile 
#
# Usage:    result = copoyOneFile(srcfile,dstfile,pretend=False,overwrite=False)
#
# Where:    srcfile   - str: Source file path
#           dstfile   - str: Destination file path
#           pretend   - bool: True  = Don't actually do it, just pretend
#                             False = Actually do it
#           overwrite - bool: True  = Overwrite existing file contents
#                             False = Skip if exists 
#
#           result    - bool:      True  = "Did it"
#                                  False = "Skipped it"
#                       Exception: Didn't do it and here's why
#

def copyOneFileOld(srcfile,dstfile,pretend=True,overwrite=True):

  # Make sure source file exists...
  if not os.path.exists(srcfile):
    return Exception("Source file %s doesn't exist"%repr(preEllipse(srcfile,75).strip()))

  #
  # Do it...
  #

  dstdir = os.path.dirname(dstfile)
  if not os.path.exists(dstdir):
    os.makedirs(dstdir)

  print('  '+preEllipse(dstfile,75)+'...',end='')

  if os.path.exists(dstfile) and not overwrite:
    print("Exists already, skipping")
    return False

  sfd = os.open(srcfile,os.O_RDONLY)
  sstat = os.fstat(sfd)
  filesize = sstat.st_size
  if not pretend:
    dfd = os.open(dstfile,os.O_RDWR|os.O_CREAT|os.O_DSYNC)

  prevpercent = -1
  blocksize = 1024*128 # 128KB at a time
  offset = 0
  while offset < filesize:
    percent = int(float(offset)/filesize * 1000)/10.0
    fstr = '%2.1f%%'%percent
    if len(fstr) < 5: fstr = ' '+fstr
    if percent != prevpercent:
      print('%s\b\b\b\b\b'%fstr,end='')
      sys.stdout.flush()
    prevpercent = percent
    if not pretend:
      os.sendfile(dfd,sfd,offset,blocksize)
      #os.fsync(dfd)
    else:
      time.sleep(.01)
    offset += blocksize

  print("Finished")
  
  if not pretend:
    os.fsync(dfd)
    os.close(dfd)
    if overwrite:
      os.truncate(dstfile,filesize)
  os.close(sfd)

  return True

def copyOneFile(srcfile,dstfile,pretend=True,overwrite=False):

  # Make sure source file exists...
  if not os.path.exists(srcfile):
    return Exception("Source file %s doesn't exist"%repr(preEllipse(srcfile,75).strip()))

  #
  # Do it...
  #

  dstdir = os.path.dirname(dstfile)
  if not os.path.exists(dstdir):
    os.makedirs(dstdir)

  print('  '+preEllipse(dstfile,75)+'...',end='')

  if os.path.exists(dstfile) and not overwrite:
    print("Exists already, skipping")
    return False

  sfd = os.open(srcfile,os.O_RDONLY)
  sstat = os.fstat(sfd)
  filesize = sstat.st_size
  if not pretend:
    dst = open(dstfile,'wb')

  prevpercent = -1
  blocksize = 1024*1024 # 1MB at a time
  offset = 0
  while offset < filesize:
    percent = int(float(offset)/filesize * 1000)/10.0
    fstr = '%2.1f%%'%percent
    if len(fstr) < 5: fstr = ' '+fstr
    if percent != prevpercent:
      print('%s\b\b\b\b\b'%fstr,end='')
      sys.stdout.flush()
    prevpercent = percent
    if not pretend:
      #os.sendfile(dfd,sfd,offset,blocksize)
      block = os.read(sfd,blocksize)
      if len(block) == 0:
        break
      numwrite = dst.write(block)
      if numwrite != len(block):
        red('Expected to write %d bytes, but actually wrote %d'%(len(block),numwrite))
      if len(block) < blocksize:
        break
      dst.flush()
    else:
      time.sleep(.01)
    offset += blocksize

  print("Finished")
  
  if not pretend:
    dst.flush()
    dst.close()
    if overwrite:
      os.truncate(dstfile,filesize)
  os.close(sfd)

  return True

#---
#
# Main
#

if __name__ == '__main__':

  srcdir  = expand('~/SRC/bb/_Other/')
  dstdir  = expand('~/DST/bb/_Other/')
  if srcdir[-1] != '/': srcdir += '/'
  if dstdir[-1] != '/': dstdir += '/'
  print('srcdir = %s'%srcdir)
  print('dstdir = %s'%dstdir)
  print('')
  print('Files...')

  files = walk(srcdir)
  maxfiles = 20
  numfiles = 0
  for file in files:
    # TEMP...
    #if 'divx' not in file: continue
    # ...TEMP
    sfile = file
    dfile = dstdir+os.path.basename(file)
    result = copyOneFile(sfile,dfile,pretend=False,overwrite=False)
    if isinstance(result,Exception):
      print(color("ERROR: "+str(result),fore='red',style='bright'))
    elif type(result) == bool:
      if result and maxfiles:
        numfiles += 1
        if numfiles >= maxfiles: break
      
  print("\nThat's it!")

  sys.exit()

