ARROW ::= '->'
ARROW_STAR ::= '->*'
ASM ::= 'asm'
ASS_ADD ::= '+='
ASS_AND ::= '&='
ASS_DIV ::= '/='
ASS_MOD ::= '%='
ASS_MUL ::= '*='
ASS_OR ::= '|='
ASS_SHL ::= '<<='
ASS_SHR ::= '>>='
ASS_SUB ::= '-='
ASS_XOR ::= '^='
AUTO ::= 'auto'
BOOL ::= 'bool'
BREAK ::= 'break'
CASE ::= 'case'
CATCH ::= 'catch'
CHAR ::= 'char'
CLASS ::= 'class'
CONST ::= 'const'
CONST_CAST ::= 'const_cast'
CONTINUE ::= 'continue'
CharacterLiteral ::= 'characterliteral'
DEC ::= 'dec'
DEFAULT ::= 'default'
DELETE ::= 'delete'
DO ::= 'do'
DOT_STAR ::= '.*'
DOUBLE ::= 'double'
DYNAMIC_CAST ::= 'dynamic_cast'
ELLIPSIS ::= 'ellipsis'
ELSE ::= 'else'
ENUM ::= 'enum'
EQ ::= '='
EXPLICIT ::= 'explicit'
EXPORT ::= 'export'
EXTERN ::= 'extern'
FALSE ::= 'false'
FLOAT ::= 'float'
FOR ::= 'for'
FRIEND ::= 'friend'
FloatingLiteral ::= 'floatingliteral'
GE ::= '>='
GOTO ::= 'goto'
IF ::= 'if'
INC ::= 'inc'
INLINE ::= 'inline'
INT ::= 'int'
Identifier ::= 'identifier'
IntegerLiteral ::= 'integerliteral'
LE ::= '<='
LOG_AND ::= '&&'
LOG_OR ::= '||'
LONG ::= 'long'
MUTABLE ::= 'mutable'
NAMESPACE ::= 'namespace'
NE ::= '!='
NEW ::= 'new'
OPERATOR ::= 'operator'
PRIVATE ::= 'private'
PROTECTED ::= 'protected'
PUBLIC ::= 'public'
REGISTER ::= 'register'
REINTERPRET_CAST ::= 'reinterpret_cast'
RETURN ::= 'return'
SCOPE ::= 'scope'
SHL ::= '<<'
SHORT ::= 'short'
SHR ::= '>>'
SIGNED ::= 'signed'
SIZEOF ::= 'sizeof'
STATIC ::= 'static'
STATIC_CAST ::= 'static_cast'
STRUCT ::= 'struct'
SWITCH ::= 'switch'
StringLiteral ::= 'stringliteral'
TEMPLATE ::= 'template'
THIS ::= 'this'
THROW ::= 'throw'
TRUE ::= 'true'
TRY ::= 'try'
TYPEDEF ::= 'typedef'
TYPEID ::= 'typeid'
TYPENAME ::= 'typename'
UNION ::= 'union'
UNSIGNED ::= 'unsigned'
USING ::= 'using'
VIRTUAL ::= 'virtual'
VOID ::= 'void'
VOLATILE ::= 'volatile'
WCHAR_T ::= 'wchar_t'
WHILE ::= 'while'
error ::= 'error'
